// <auto-generated />
using System;
using Cookify.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cookify.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210709140007_RecipesAndCategories4")]
    partial class RecipesAndCategories4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cookify.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("Cookify.Models.FavoriteRecipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("RecipeId");

                    b.ToTable("FavoriteRecipe");
                });

            modelBuilder.Entity("Cookify.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Image");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Path = "https://cdn.pixabay.com/photo/2015/12/08/00/26/food-1081707_960_720.jpg",
                            Title = "Burger"
                        },
                        new
                        {
                            Id = 2,
                            Path = "https://cdn.pixabay.com/photo/2014/12/15/13/40/penne-569072_960_720.jpg",
                            Title = "Makaron"
                        },
                        new
                        {
                            Id = 3,
                            Path = "https://cdn.pixabay.com/photo/2014/02/01/17/28/apple-256263_960_720.jpg",
                            Title = "Jabłko"
                        },
                        new
                        {
                            Id = 4,
                            Path = "https://cdn.pixabay.com/photo/2017/01/17/17/05/spaghetti-1987454_960_720.jpg",
                            Title = "Spaghetti"
                        },
                        new
                        {
                            Id = 5,
                            Path = "https://cdn.pixabay.com/photo/2017/12/09/08/18/pizza-3007395_960_720.jpg",
                            Title = "Pizza"
                        },
                        new
                        {
                            Id = 6,
                            Path = "https://cdn.pixabay.com/photo/2017/03/31/10/56/waffles-2190961_960_720.jpg",
                            Title = "Jajka"
                        },
                        new
                        {
                            Id = 7,
                            Path = "https://cdn.pixabay.com/photo/2017/03/13/13/39/pancakes-2139844_960_720.jpg",
                            Title = "Naleśniki"
                        });
                });

            modelBuilder.Entity("Cookify.Models.ImageRecipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ImageId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("RecipeId");

                    b.ToTable("ImageRecipe");
                });

            modelBuilder.Entity("Cookify.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Name = "Pomidor"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Name = "Ogórek"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Name = "Jabłko"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Name = "Wołowina"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Name = "Masło"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Name = "Mleko"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Name = "Ziemniak"
                        });
                });

            modelBuilder.Entity("Cookify.Models.IngredientRecipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("IngredientRecipe");
                });

            modelBuilder.Entity("Cookify.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Accepted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DifficultyLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreparationTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeCategoryId");

                    b.ToTable("Recipe");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Accepted = true,
                            Description = "In ornare, libero at pulvinar eleifend, est nisl placerat sem, a porta nisi massa ut ex. Morbi ornare maximus arcu, nec aliquam sem dignissim a. Sed accumsan sem diam, et euismod nulla feugiat nec. Suspendisse mattis sem mi, sit amet sagittis erat gravida ut. Curabitur rhoncus sapien et ante maximus sagittis. Sed ac magna sit amet orci fringilla finibus ut ut erat. Fusce ut augue euismod, hendrerit risus non, interdum felis.\n Vestibulum a sapien tellus. Sed porta sapien purus, nec rhoncus felis euismod sed. Nam non pulvinar nulla. Interdum et malesuada fames ac ante ipsum primis in faucibus. Etiam aliquam ullamcorper rutrum. Sed convallis semper efficitur.In vestibulum suscipit sodales.Donec sagittis hendrerit erat at condimentum.Curabitur sit amet quam id ante fermentum sodales.Vestibulum ut consequat enim.Integer in tristique diam, et tristique quam.Sed at nunc et nisl imperdiet dignissim et nec augue.Sed pretium urna non vehicula faucibus.Ut ut ornare dolor, a hendrerit urna.Proin elit orci, mollis eu magna ac, malesuada aliquam urna.Nulla non diam non ex posuere mattis vel eget sem.In et risus purus.",
                            DifficultyLevel = "Prosty",
                            ImageUrl = "https://images.unsplash.com/photo-1612182062966-c8fe45ecbf73?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1200&q=80",
                            Name = "Pancakes z owocami",
                            PreparationTime = "15 minut",
                            RecipeCategoryId = 12
                        },
                        new
                        {
                            Id = 2,
                            Accepted = true,
                            Description = "In ornare, libero at pulvinar eleifend, est nisl placerat sem, a porta nisi massa ut ex. Morbi ornare maximus arcu, nec aliquam sem dignissim a. Sed accumsan sem diam, et euismod nulla feugiat nec. Suspendisse mattis sem mi, sit amet sagittis erat gravida ut. Curabitur rhoncus sapien et ante maximus sagittis. Sed ac magna sit amet orci fringilla finibus ut ut erat. Fusce ut augue euismod, hendrerit risus non, interdum felis.\n Vestibulum a sapien tellus. Sed porta sapien purus, nec rhoncus felis euismod sed. Nam non pulvinar nulla. Interdum et malesuada fames ac ante ipsum primis in faucibus. Etiam aliquam ullamcorper rutrum. Sed convallis semper efficitur.In vestibulum suscipit sodales.Donec sagittis hendrerit erat at condimentum.Curabitur sit amet quam id ante fermentum sodales.Vestibulum ut consequat enim.Integer in tristique diam, et tristique quam.Sed at nunc et nisl imperdiet dignissim et nec augue.Sed pretium urna non vehicula faucibus.Ut ut ornare dolor, a hendrerit urna.Proin elit orci, mollis eu magna ac, malesuada aliquam urna.Nulla non diam non ex posuere mattis vel eget sem.In et risus purus.",
                            DifficultyLevel = "Prosty",
                            ImageUrl = "https://images.unsplash.com/photo-1565087170449-fa23854a6100?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1200&q=80",
                            Name = "Naleśniki francuskie z czekoladą",
                            PreparationTime = "20 minut",
                            RecipeCategoryId = 12
                        },
                        new
                        {
                            Id = 3,
                            Accepted = true,
                            Description = "In ornare, libero at pulvinar eleifend, est nisl placerat sem, a porta nisi massa ut ex. Morbi ornare maximus arcu, nec aliquam sem dignissim a. Sed accumsan sem diam, et euismod nulla feugiat nec. Suspendisse mattis sem mi, sit amet sagittis erat gravida ut. Curabitur rhoncus sapien et ante maximus sagittis. Sed ac magna sit amet orci fringilla finibus ut ut erat. Fusce ut augue euismod, hendrerit risus non, interdum felis.",
                            DifficultyLevel = "Prosty",
                            ImageUrl = "https://images.unsplash.com/photo-1517741991040-91338b176129?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1200&q=80",
                            Name = "Proste pancakes",
                            PreparationTime = "10 minut",
                            RecipeCategoryId = 12
                        },
                        new
                        {
                            Id = 4,
                            Accepted = true,
                            Description = "In ornare, libero at pulvinar eleifend, est nisl placerat sem, a porta nisi massa ut ex. Morbi ornare maximus arcu, nec aliquam sem dignissim a. Sed accumsan sem diam, et euismod nulla feugiat nec. Suspendisse mattis sem mi, sit amet sagittis erat gravida ut. Curabitur rhoncus sapien et ante maximus sagittis. Sed ac magna sit amet orci fringilla finibus ut ut erat. Fusce ut augue euismod, hendrerit risus non, interdum felis.",
                            DifficultyLevel = "Prosty",
                            ImageUrl = "https://images.unsplash.com/photo-1617470703128-26a0fc9af10f?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1052&q=80",
                            Name = "Pizza wegetariańska",
                            PreparationTime = "40 minut",
                            RecipeCategoryId = 1
                        },
                        new
                        {
                            Id = 5,
                            Accepted = true,
                            Description = "In ornare, libero at pulvinar eleifend, est nisl placerat sem, a porta nisi massa ut ex. Morbi ornare maximus arcu, nec aliquam sem dignissim a. Sed accumsan sem diam, et euismod nulla feugiat nec. Suspendisse mattis sem mi, sit amet sagittis erat gravida ut. Curabitur rhoncus sapien et ante maximus sagittis. Sed ac magna sit amet orci fringilla finibus ut ut erat. Fusce ut augue euismod, hendrerit risus non, interdum felis.",
                            DifficultyLevel = "Prosty",
                            ImageUrl = "https://images.unsplash.com/photo-1530912585210-7916cd026e59?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1200&q=80",
                            Name = "Wiosenna sałatka",
                            PreparationTime = "40 minut",
                            RecipeCategoryId = 1
                        },
                        new
                        {
                            Id = 6,
                            Accepted = true,
                            Description = "In ornare, libero at pulvinar eleifend, est nisl placerat sem, a porta nisi massa ut ex. Morbi ornare maximus arcu, nec aliquam sem dignissim a. Sed accumsan sem diam, et euismod nulla feugiat nec. Suspendisse mattis sem mi, sit amet sagittis erat gravida ut. Curabitur rhoncus sapien et ante maximus sagittis. Sed ac magna sit amet orci fringilla finibus ut ut erat. Fusce ut augue euismod, hendrerit risus non, interdum felis.",
                            DifficultyLevel = "Prosty",
                            ImageUrl = "https://images.unsplash.com/photo-1585032226651-759b368d7246?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1200&q=80",
                            Name = "Spaghetti z krewetkami",
                            PreparationTime = "40 minut",
                            RecipeCategoryId = 2
                        },
                        new
                        {
                            Id = 7,
                            Accepted = true,
                            Description = "In ornare, libero at pulvinar eleifend, est nisl placerat sem, a porta nisi massa ut ex. Morbi ornare maximus arcu, nec aliquam sem dignissim a. Sed accumsan sem diam, et euismod nulla feugiat nec. Suspendisse mattis sem mi, sit amet sagittis erat gravida ut. Curabitur rhoncus sapien et ante maximus sagittis. Sed ac magna sit amet orci fringilla finibus ut ut erat. Fusce ut augue euismod, hendrerit risus non, interdum felis.",
                            DifficultyLevel = "Prosty",
                            ImageUrl = "https://images.unsplash.com/photo-1588767768106-1b20e51d9d68?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1200&q=80",
                            Name = "Grillowane udka z kurczaka",
                            PreparationTime = "1h 30min",
                            RecipeCategoryId = 2
                        },
                        new
                        {
                            Id = 8,
                            Accepted = true,
                            Description = "In ornare, libero at pulvinar eleifend, est nisl placerat sem, a porta nisi massa ut ex. Morbi ornare maximus arcu, nec aliquam sem dignissim a. Sed accumsan sem diam, et euismod nulla feugiat nec. Suspendisse mattis sem mi, sit amet sagittis erat gravida ut. Curabitur rhoncus sapien et ante maximus sagittis. Sed ac magna sit amet orci fringilla finibus ut ut erat. Fusce ut augue euismod, hendrerit risus non, interdum felis.",
                            DifficultyLevel = "Zaawansowany",
                            ImageUrl = "https://images.unsplash.com/photo-1518310532637-f5225f94f3c3?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1200&q=80",
                            Name = "Śniadaniowe muffiny",
                            PreparationTime = "15 minut",
                            RecipeCategoryId = 3
                        },
                        new
                        {
                            Id = 9,
                            Accepted = true,
                            Description = "In ornare, libero at pulvinar eleifend, est nisl placerat sem, a porta nisi massa ut ex. Morbi ornare maximus arcu, nec aliquam sem dignissim a. Sed accumsan sem diam, et euismod nulla feugiat nec. Suspendisse mattis sem mi, sit amet sagittis erat gravida ut. Curabitur rhoncus sapien et ante maximus sagittis. Sed ac magna sit amet orci fringilla finibus ut ut erat. Fusce ut augue euismod, hendrerit risus non, interdum felis.",
                            DifficultyLevel = "Prosty",
                            ImageUrl = "https://images.unsplash.com/photo-1504708706948-13d6cbba4062?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1200&q=80",
                            Name = "Owsianka",
                            PreparationTime = "5 minut",
                            RecipeCategoryId = 3
                        },
                        new
                        {
                            Id = 10,
                            Accepted = true,
                            Description = "In ornare, libero at pulvinar eleifend, est nisl placerat sem, a porta nisi massa ut ex. Morbi ornare maximus arcu, nec aliquam sem dignissim a. Sed accumsan sem diam, et euismod nulla feugiat nec. Suspendisse mattis sem mi, sit amet sagittis erat gravida ut. Curabitur rhoncus sapien et ante maximus sagittis. Sed ac magna sit amet orci fringilla finibus ut ut erat. Fusce ut augue euismod, hendrerit risus non, interdum felis.",
                            DifficultyLevel = "Prosty",
                            ImageUrl = "https://images.unsplash.com/photo-1525473233136-080cdd8b7cb2?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1200&q=80",
                            Name = "Angielskie śniadanie",
                            PreparationTime = "20 minut",
                            RecipeCategoryId = 3
                        },
                        new
                        {
                            Id = 11,
                            Accepted = true,
                            Description = "In ornare, libero at pulvinar eleifend, est nisl placerat sem, a porta nisi massa ut ex. Morbi ornare maximus arcu, nec aliquam sem dignissim a. Sed accumsan sem diam, et euismod nulla feugiat nec. Suspendisse mattis sem mi, sit amet sagittis erat gravida ut. Curabitur rhoncus sapien et ante maximus sagittis. Sed ac magna sit amet orci fringilla finibus ut ut erat. Fusce ut augue euismod, hendrerit risus non, interdum felis.",
                            DifficultyLevel = "Prosty",
                            ImageUrl = "https://images.unsplash.com/photo-1548808957-e80207091212?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1200&q=80",
                            Name = "Sałatka z łososiem i kalafiorem",
                            PreparationTime = "10 minut",
                            RecipeCategoryId = 4
                        },
                        new
                        {
                            Id = 12,
                            Accepted = true,
                            Description = "In ornare, libero at pulvinar eleifend, est nisl placerat sem, a porta nisi massa ut ex. Morbi ornare maximus arcu, nec aliquam sem dignissim a. Sed accumsan sem diam, et euismod nulla feugiat nec. Suspendisse mattis sem mi, sit amet sagittis erat gravida ut. Curabitur rhoncus sapien et ante maximus sagittis. Sed ac magna sit amet orci fringilla finibus ut ut erat. Fusce ut augue euismod, hendrerit risus non, interdum felis.",
                            DifficultyLevel = "Zaawansowany",
                            ImageUrl = "https://images.unsplash.com/photo-1551782450-a2132b4ba21d?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1200&q=80",
                            Name = "Hamburger z frytkami",
                            PreparationTime = "30 minut",
                            RecipeCategoryId = 5
                        },
                        new
                        {
                            Id = 13,
                            Accepted = true,
                            Description = "In ornare, libero at pulvinar eleifend, est nisl placerat sem, a porta nisi massa ut ex. Morbi ornare maximus arcu, nec aliquam sem dignissim a. Sed accumsan sem diam, et euismod nulla feugiat nec. Suspendisse mattis sem mi, sit amet sagittis erat gravida ut. Curabitur rhoncus sapien et ante maximus sagittis. Sed ac magna sit amet orci fringilla finibus ut ut erat. Fusce ut augue euismod, hendrerit risus non, interdum felis.",
                            DifficultyLevel = "Prosty",
                            ImageUrl = "https://images.unsplash.com/photo-1570696516188-ade861b84a49?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1200&q=80",
                            Name = "Smoothie z owoców leśnych",
                            PreparationTime = "5 minut",
                            RecipeCategoryId = 6
                        },
                        new
                        {
                            Id = 14,
                            Accepted = true,
                            Description = "In ornare, libero at pulvinar eleifend, est nisl placerat sem, a porta nisi massa ut ex. Morbi ornare maximus arcu, nec aliquam sem dignissim a. Sed accumsan sem diam, et euismod nulla feugiat nec. Suspendisse mattis sem mi, sit amet sagittis erat gravida ut. Curabitur rhoncus sapien et ante maximus sagittis. Sed ac magna sit amet orci fringilla finibus ut ut erat. Fusce ut augue euismod, hendrerit risus non, interdum felis.",
                            DifficultyLevel = "Zaawansowany",
                            ImageUrl = "https://images.unsplash.com/photo-1561845730-208ad5910553?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1200&q=80",
                            Name = "Domowe lody",
                            PreparationTime = "2 godziny",
                            RecipeCategoryId = 7
                        },
                        new
                        {
                            Id = 15,
                            Accepted = true,
                            Description = "In ornare, libero at pulvinar eleifend, est nisl placerat sem, a porta nisi massa ut ex. Morbi ornare maximus arcu, nec aliquam sem dignissim a. Sed accumsan sem diam, et euismod nulla feugiat nec. Suspendisse mattis sem mi, sit amet sagittis erat gravida ut. Curabitur rhoncus sapien et ante maximus sagittis. Sed ac magna sit amet orci fringilla finibus ut ut erat. Fusce ut augue euismod, hendrerit risus non, interdum felis.",
                            DifficultyLevel = "Zaawansowany",
                            ImageUrl = "https://images.unsplash.com/photo-1607103058027-4c5b42b86a60?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1200&q=80",
                            Name = "Precle",
                            PreparationTime = "godzina",
                            RecipeCategoryId = 8
                        },
                        new
                        {
                            Id = 16,
                            Accepted = true,
                            Description = "In ornare, libero at pulvinar eleifend, est nisl placerat sem, a porta nisi massa ut ex. Morbi ornare maximus arcu, nec aliquam sem dignissim a. Sed accumsan sem diam, et euismod nulla feugiat nec. Suspendisse mattis sem mi, sit amet sagittis erat gravida ut. Curabitur rhoncus sapien et ante maximus sagittis. Sed ac magna sit amet orci fringilla finibus ut ut erat. Fusce ut augue euismod, hendrerit risus non, interdum felis.",
                            DifficultyLevel = "Prosty",
                            ImageUrl = "https://images.unsplash.com/photo-1512852939750-1305098529bf?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1200&q=80",
                            Name = "Sałatka cezar",
                            PreparationTime = "15 minut",
                            RecipeCategoryId = 9
                        },
                        new
                        {
                            Id = 17,
                            Accepted = true,
                            Description = "In ornare, libero at pulvinar eleifend, est nisl placerat sem, a porta nisi massa ut ex. Morbi ornare maximus arcu, nec aliquam sem dignissim a. Sed accumsan sem diam, et euismod nulla feugiat nec. Suspendisse mattis sem mi, sit amet sagittis erat gravida ut. Curabitur rhoncus sapien et ante maximus sagittis. Sed ac magna sit amet orci fringilla finibus ut ut erat. Fusce ut augue euismod, hendrerit risus non, interdum felis.",
                            DifficultyLevel = "Zaawansowany",
                            ImageUrl = "https://images.unsplash.com/photo-1600699899970-b1c9fadd8f9e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1200&q=80",
                            Name = "Grillowane sardynki",
                            PreparationTime = "40 minut",
                            RecipeCategoryId = 10
                        },
                        new
                        {
                            Id = 18,
                            Accepted = true,
                            Description = "In ornare, libero at pulvinar eleifend, est nisl placerat sem, a porta nisi massa ut ex. Morbi ornare maximus arcu, nec aliquam sem dignissim a. Sed accumsan sem diam, et euismod nulla feugiat nec. Suspendisse mattis sem mi, sit amet sagittis erat gravida ut. Curabitur rhoncus sapien et ante maximus sagittis. Sed ac magna sit amet orci fringilla finibus ut ut erat. Fusce ut augue euismod, hendrerit risus non, interdum felis.",
                            DifficultyLevel = "Zaawansowany",
                            ImageUrl = "https://images.unsplash.com/photo-1534766555764-ce878a5e3a2b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1200&q=80",
                            Name = "Sernik czekoladowy",
                            PreparationTime = "godzina",
                            RecipeCategoryId = 11
                        });
                });

            modelBuilder.Entity("Cookify.Models.RecipeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RecipeCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/09/16/19/21/salad-2756467_960_720.jpg",
                            Title = "Wege"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://cdn.pixabay.com/photo/2020/06/02/18/10/noodles-5252012_960_720.jpg",
                            Title = "Obiady"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://cdn.pixabay.com/photo/2014/09/22/14/49/breakfast-456351_960_720.jpg",
                            Title = "Śniadania"
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/06/06/22/46/mediterranean-cuisine-2378758_960_720.jpg",
                            Title = "Zdrowe"
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "https://cdn.pixabay.com/photo/2020/03/29/22/42/burger-4982550_960_720.jpg",
                            Title = "Fastfoody"
                        },
                        new
                        {
                            Id = 6,
                            ImageUrl = "https://cdn.pixabay.com/photo/2020/03/20/20/49/cocktail-4951991_960_720.jpg",
                            Title = "Koktajle"
                        },
                        new
                        {
                            Id = 7,
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/03/31/18/02/strawberry-dessert-2191973_960_720.jpg",
                            Title = "Desery"
                        },
                        new
                        {
                            Id = 8,
                            ImageUrl = "https://images.unsplash.com/photo-1460819739742-50e4486578f5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=967&q=80",
                            Title = "Przekąski"
                        },
                        new
                        {
                            Id = 9,
                            ImageUrl = "https://images.unsplash.com/photo-1571047399553-603e2138b646?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=634&q=80",
                            Title = "Sałatki"
                        },
                        new
                        {
                            Id = 10,
                            ImageUrl = "https://images.unsplash.com/photo-1499125562588-29fb8a56b5d5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1489&q=80",
                            Title = "Ryby"
                        },
                        new
                        {
                            Id = 11,
                            ImageUrl = "https://images.unsplash.com/photo-1595904567075-f143cbe1f0c8?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=675&q=80",
                            Title = "Ciasta"
                        },
                        new
                        {
                            Id = 12,
                            ImageUrl = "https://images.unsplash.com/photo-1600326145552-327f74b9c189?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",
                            Title = "Naleśniki"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Cookify.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<bool>("Accepted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Cookify.Models.Comment", b =>
                {
                    b.HasOne("Cookify.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cookify.Models.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Cookify.Models.FavoriteRecipe", b =>
                {
                    b.HasOne("Cookify.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cookify.Models.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Cookify.Models.ImageRecipe", b =>
                {
                    b.HasOne("Cookify.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cookify.Models.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Cookify.Models.IngredientRecipe", b =>
                {
                    b.HasOne("Cookify.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cookify.Models.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Cookify.Models.Recipe", b =>
                {
                    b.HasOne("Cookify.Models.RecipeCategory", "RecipeCategory")
                        .WithMany()
                        .HasForeignKey("RecipeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecipeCategory");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
